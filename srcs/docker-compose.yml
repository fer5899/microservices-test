volumes:

  order-srcs:
    name: order-srcs
    driver: local
    driver_opts:
      device: ./requirements/order/src
      o : bind
      type : none

  stock-srcs:
    name: stock-srcs
    driver: local
    driver_opts:
      device: ./requirements/stock/src
      o : bind
      type : none


networks:

  microservices:
    name: microservices


services:

  order-db:
    image: postgres:17
    container_name: order-db
    volumes:
      - ./requirements/order/data:/var/lib/postgresql/data
    env_file :
      - .env
    networks :
      - microservices
    shm_size: 128mb
    restart: always

  order-drf:
    image: order-drf:fgomez-d
    container_name: order-drf
    build: ./requirements/order
    volumes:
      - order-srcs:/usr/src/app
    env_file :
      - .env
    networks :
      - microservices
    depends_on:
      - order-db
      - message-broker
    ports:
      - 8001:8000
    restart: always
    command: [/bin/sh, drf_startup.sh]

  order-celery:
    image: order-celery:fgomez-d
    container_name: order-celery
    build: ./requirements/order
    volumes:
      - order-srcs:/usr/src/app
    env_file :
      - .env
    networks :
      - microservices
    depends_on:
      - order-db
      - message-broker
    restart: always
    command: [/bin/sh, celery_startup.sh]

  stock-db:
    image: postgres:17
    container_name: stock-db
    volumes:
      - ./requirements/stock/data:/var/lib/postgresql/data
    env_file :
      - .env
    networks :
      - microservices
    shm_size: 128mb
    restart: always

  stock-drf:
    image: stock-drf:fgomez-d
    container_name: stock-drf
    build: ./requirements/stock
    volumes:
      - stock-srcs:/usr/src/app
    env_file :
      - .env
    networks :
      - microservices
    depends_on:
      - stock-db
      - message-broker
    ports:
      - 8002:8000
    restart: always
    command: [/bin/sh, drf_startup.sh]

  stock-celery:
    image: stock-celery:fgomez-d
    container_name: stock-celery
    build: ./requirements/stock
    volumes:
      - stock-srcs:/usr/src/app
    env_file :
      - .env
    networks :
      - microservices
    depends_on:
      - stock-db
      - message-broker
    restart: always
    command: [/bin/sh, celery_startup.sh]

  message-broker:
    image: rabbitmq:4-management-alpine
    container_name: message-broker
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - ./requirements/message_broker/data:/var/lib/rabbitmq
        - ./requirements/message_broker/log:/var/log/rabbitmq
    networks:
      - microservices
    restart: always

  nginx:
    image: nginx:fgomez-d
    container_name: nginx
    build: ./requirements/api_gateway
    ports:
      - "443:443"
    depends_on:
      - order-drf
      - stock-drf
    networks:
      - microservices
    restart: always
